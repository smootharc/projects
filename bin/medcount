#!/usr/bin/env tclsh

proc usage { message } {

    global argv0
    set message [string toupper $message 0 0]
    puts "\n$message\n"
    puts "Usage: [file tail $argv0] medication ?starttime? ?endtime?\n"
    exit 1

}

if { $argc eq 0 } { usage "Missing parameters!" }

set medication [lindex $argv 0]
set starttime [lindex $argv 1]
set endtime [lindex $argv 2]

if { ![llength $starttime] } { set starttime [clock format [clock  add [clock scan now] -30 days] -format "%Y-%m-%d %H:%M"] }
if { ![llength $endtime] } { set endtime now }

set startseconds [clock scan $starttime]
set endseconds [clock scan $endtime] 

#puts "Start seconds: $startseconds End seconds: $endseconds"
#after 1000

if { $startseconds >= $endseconds } { usage "Startime must be earlier than end time." }

set elapsedseconds [expr {$endseconds - $startseconds}]

set doses [split [exec gcalcli --tsv --calendar Medical agenda $starttime $endtime] "\n"]

set doses [lsearch -all -inline -not $doses *00:00*]

set doses [lsearch -all -inline -nocase $doses *$medication*]

if { [llength $doses] == 0 } { usage "Medication not found." }

#foreach dose $doses { puts $dose }

set dosecount 0

foreach dose $doses { 
    
    set doseseconds [clock scan [concat [lindex $dose 0] [lindex $dose 1]]]
    if { [expr { $startseconds < $doseseconds && $endseconds > $doseseconds }] } {
        incr dosecount
#        puts $dosecount
}

}

set doses [llength $doses]

set days [expr { $elapsedseconds / 86400.00 }]

puts ""
puts "Medication: $medication"
puts "      From: [clock format $startseconds -format "%Y-%m-%d %H:%M"]"
puts "        To: [clock format $endseconds -format "%Y-%m-%d %H:%M"]"
puts "     Doses: [format %.2f $dosecount]"
puts "      Days: [format %.2f $days]"
puts " Doses/Day: [format %.2f [expr { $dosecount / $days }]]"
puts ""
